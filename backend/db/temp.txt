
-- 2c.1: Retrieve all hotels for the "SleepyDan" chain. (done)
SELECT * FROM hotel WHERE chainname = 'SleepyDan';

-- 2c.2: Aggregation query to count the number of hotels per chain. (done)
SELECT chainname, COUNT(*) AS TotalHotels FROM hotel GROUP BY chainname;

-- 2c.3: Nested query to retrieve hotels with more rooms than the overall average. (done)
SELECT * FROM hotel WHERE numrooms > (SELECT AVG(numrooms) FROM hotel);

-- 2c.4: Date-range query to retrieve all bookings within a specific date range. (done)
SELECT * FROM booking WHERE checkindate >= '2025-04-01' AND checkoutdate <= '2025-04-10';

-- 2c.5: Dynamic query for available rooms based on multiple criteria. (done)
-- Parameters: :capacity, :chain, :rating, :area, :max_price, :start_date, :end_date.
SELECT R.*, H.ChainName, H.Rating, H.NumRooms, H.Address->>'City' AS City
FROM room R
JOIN hotel H ON R.HotelAddress = H.Address
WHERE R.Capacity = :capacity
  AND H.ChainName = :chain
  AND H.Rating = :rating
  AND H.Address->>'City' = :area
  AND R.Price <= :max_price
  AND NOT EXISTS (
      SELECT 1 FROM booking B
      WHERE B.HotelAddress = R.HotelAddress
        AND B.RoomID = R.RoomID
        AND B.CheckInDate < :end_date
        AND B.CheckOutDate > :start_date
  )
  AND NOT EXISTS (
      SELECT 1 FROM renting Ren
      WHERE Ren.HotelAddress = R.HotelAddress
        AND Ren.RoomID = R.RoomID
        AND Ren.CheckInDate < :end_date
        AND Ren.CheckOutDate > :start_date
  );

-- 2c.6: Retrieve all rooms with a MiniBar in their amenities. (done)
SELECT * FROM room WHERE amenities ? 'MiniBar';



-- 2c.9: Examples of data modification queries.
-- Insert a new customer. (done)
INSERT INTO customer (Name, RegistrationDate, Address)
VALUES ('Silly Customer', CURRENT_DATE, '{"City": "TestCity", "StreetName": "Test St", "StreetNum": "100", "PostalCode": "00000"}');

-- Update a customer.(done)
UPDATE customer SET Name = 'Updated Customer' WHERE CustomerID = 1;

-- Delete a customer. (done)
DELETE FROM customer WHERE CustomerID = 1;


-- 2f.1: Retrieve data from the available_rooms_per_area view.(done)
SELECT * FROM available_rooms_per_area;

-- 2f.2: Retrieve data from the aggregated_capacity_per_hotel view.(done)
SELECT * FROM aggregated_capacity_per_hotel;



The User Interface should allow the insert/delete/update of all information related to
customers, employees, hotels and rooms. 



pages needed:
login(choose between employee and customer)
room booking (filter by many things)
hotel employee (turn booking into renting)